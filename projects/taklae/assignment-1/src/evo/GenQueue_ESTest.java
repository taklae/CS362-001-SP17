/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 18 05:01:36 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenQueue_ESTest extends GenQueue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GenQueue<Object> genQueue0 = new GenQueue<Object>();
      GenQueue<Object> genQueue1 = new GenQueue<Object>();
      Integer integer0 = new Integer(1428);
      genQueue1.enqueue(integer0);
      // Undeclared exception!
      try { 
        genQueue1.addItems((GenQueue<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GenQueue<Integer> genQueue0 = new GenQueue<Integer>();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GenQueue<Integer> genQueue0 = new GenQueue<Integer>();
      genQueue0.size();
      genQueue0.enqueue((Integer) null);
      genQueue0.hasItems();
      GenQueue<Integer> genQueue1 = new GenQueue<Integer>();
      GenQueue<Object> genQueue2 = new GenQueue<Object>();
      genQueue0.enqueue((Integer) null);
      genQueue2.dequeue();
      genQueue2.enqueue(genQueue2);
      genQueue2.hasItems();
      genQueue2.hasItems();
      genQueue2.addItems(genQueue0);
      genQueue2.dequeue();
      genQueue0.dequeue();
      GenQueue<String> genQueue3 = new GenQueue<String>();
      genQueue3.dequeue();
      genQueue2.size();
      genQueue3.enqueue("");
      genQueue0.size();
      genQueue3.dequeue();
      genQueue2.hasItems();
      genQueue2.size();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GenQueue<String> genQueue0 = new GenQueue<String>();
      genQueue0.hasItems();
      genQueue0.hasItems();
      GenQueue<String> genQueue1 = new GenQueue<String>();
      String string0 = "8";
      genQueue1.enqueue(").,}^AJVl6a.'%Rli");
      // Undeclared exception!
      try { 
        genQueue1.addItems(genQueue0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GenQueue<String> genQueue0 = new GenQueue<String>();
      GenQueue<String> genQueue1 = new GenQueue<String>();
      // Undeclared exception!
      try { 
        genQueue0.addItems(genQueue1);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GenQueue<Integer> genQueue0 = new GenQueue<Integer>();
      GenQueue<Integer> genQueue1 = new GenQueue<Integer>();
      genQueue1.hasItems();
      genQueue1.dequeue();
      genQueue1.dequeue();
      // Undeclared exception!
      try { 
        genQueue0.addItems(genQueue1);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      GenQueue<Object> genQueue0 = new GenQueue<Object>();
      genQueue0.size();
      GenQueue<String> genQueue1 = new GenQueue<String>();
      // Undeclared exception!
      try { 
        genQueue0.addItems(genQueue1);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      GenQueue<String> genQueue0 = new GenQueue<String>();
      genQueue0.hasItems();
      genQueue0.size();
      GenQueue<Object> genQueue1 = new GenQueue<Object>();
      genQueue0.dequeue();
      Integer integer0 = new Integer(0);
      genQueue1.enqueue(integer0);
      genQueue1.hasItems();
      genQueue1.size();
      genQueue1.hasItems();
      genQueue0.hasItems();
      GenQueue<Integer> genQueue2 = new GenQueue<Integer>();
      genQueue1.hasItems();
      genQueue0.enqueue("E |D\"pOb)e");
      genQueue1.hasItems();
      genQueue0.hasItems();
      genQueue0.enqueue((String) null);
      genQueue0.hasItems();
      genQueue0.size();
      GenQueue<Object> genQueue3 = new GenQueue<Object>();
      genQueue1.dequeue();
      genQueue3.hasItems();
      GenQueue<String> genQueue4 = new GenQueue<String>();
      genQueue4.dequeue();
      genQueue2.dequeue();
      genQueue1.hasItems();
      genQueue3.enqueue("E |D\"pOb)e");
      genQueue1.size();
      genQueue3.hasItems();
      genQueue0.size();
      // Undeclared exception!
      try { 
        genQueue0.addItems(genQueue4);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      GenQueue<Integer> genQueue0 = new GenQueue<Integer>();
      GenQueue<Integer> genQueue1 = new GenQueue<Integer>();
      genQueue1.hasItems();
      genQueue0.dequeue();
      // Undeclared exception!
      try { 
        genQueue0.addItems(genQueue1);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }
}
